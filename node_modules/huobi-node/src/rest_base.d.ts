import { T_object, T_res } from './type';
export declare class Rest_base {
    opt: T_rest_opt;
    constructor(opt?: T_rest_opt);
    get host(): string;
    get<T = any>(path: string, params?: T_object): Promise<T_res<T>>;
    post<T = any>(path: string, params?: T_object): Promise<T_res<T>>;
    call<T = any>(method: 'GET' | 'POST', path: string, params?: T_object): Promise<T_res<T>>;
    private sign;
    private path_format;
    fetch<T = any>(path: string, options: RequestInit): Promise<T_res<T>>;
}
export interface T_rest_opt {
    auth?: {
        key: string;
        secret: string;
    };
    api_domain?: string;
    api_proto?: string;
}
