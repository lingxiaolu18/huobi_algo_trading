#!/usr/bin/env node

const { dir_root } = require('../root')
const r = dir_root

const { writeFileSync, statSync } = require('fs')
const shell = require('shelljs')

const json = require(r('./package.json'))

run()

async function run() {
	const tmp_path = r('./tmp')
	const git_path = r('build/.git')
	const git_backup_path = `${tmp_path}/.git_tmp_backup`

	shell.mkdir('-p', tmp_path)
	shell.mv(git_path, git_backup_path)
	shell.exec(`rm -fr ${r('build/*')} && npx tsc`)
	shell.mv(git_backup_path, git_path)

	shell.cp(r('Dockerfile.raw'), r('build/Dockerfile'))
	shell.cp(r('.env.example'), r('build/.env.example'))
	shell.cp(r('.gitignore'), r('build/.gitignore'))
	shell.cp(r('readme.md'), r('build/readme.md'))
	shell.cp(r('tsconfig.json'), r('build/tsconfig.json'))
	shell.cp('-r', r('bin'), r('build'))

	delete json.files
	json.main = 'index.js'
	json.type = 'index.d.ts'
	writeFileSync(dir_root('build/package.json'), JSON.stringify(json), () => {})

	console.info(`
  Remember to put .env file in your build directory in production environment.
`)
}
